{"version":3,"sources":["utils/index.js","services/index.js","utils/enums.js","components/item/ItemValue.jsx","components/item/index.jsx","components/item/list.jsx","components/FormElement.jsx","components/item/form/NewItemForm.jsx","components/item/form/newItemSchema.js","components/item/form/NewItemModal.jsx","login/useAuthToken.js","main-page/MainPage.jsx","login/LoginPage.jsx","components/auth/PrivateRoute.jsx","components/Layout.jsx","App.jsx","serviceWorker.js","index.js"],"names":["noop","instance","axios","create","baseURL","process","tryLogin","credentials","onSuccess","a","onFailure","get","response","token","data","console","log","getItems","config","headers","deleteItem","id","delete","addItem","newItem","post","ITEM_TYPE","FOOD","DRINK","Label","styled","span","className","children","label","unit","FoodItem","description","weight","price","quantity","Card","Text","ItemData","DrinkItem","volume","div","Item","type","name","removeItem","rest","Component","Img","variant","src","Body","Title","Button","onClick","List","items","CardColumns","map","item","key","FormElement","error","controlProps","Form","Group","as","Row","column","sm","Col","Control","placeholder","isValid","String","value","length","NewItemForm","setType","volumeWeight","errorsMap","handleChange","onChange","controlId","DropdownButton","title","toUpperCase","Object","values","itemType","index","Dropdown","newItemSchema","yup","shape","required","max","notRequired","positive","validateForm","resultObject","onValidationSuccess","onValidationError","validate","abortEarly","isStrict","initialState","isFormValid","reducer","state","action","result","NewItemModal","closeModal","visible","addNewItem","itemsLength","useReducer","dispatch","useEffect","setErrorsMap","err","inner","forEach","path","message","setErrors","closeAndClear","formProps","event","target","Modal","show","onHide","size","Header","closeButton","Footer","disabled","Number","parseFloat","parseInt","useAuthToken","useCookies","authToken","useState","setItems","modalVisible","setModalVisibility","onDeleteSuccess","newArr","filter","onAddSuccess","LoginButton","login","setLogin","password","setPassword","setCookie","history","useHistory","onLoginSuccess","useCallback","push","handleUserKeyPress","keyCode","username","window","addEventListener","removeEventListener","setter","PrivateRoute","component","render","props","to","CenterNavLink","NavLink","AppTitle","h1","StyledLayout","removeCookie","App","CookiesProvider","exact","LoginPage","MainPage","from","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9536ab19.chunk.js","sourcesContent":["export const noop = () => null;\n","import axios from \"axios\";\nimport { noop } from \"../utils\";\n\nconst instance = axios.create({ baseURL: process.env.REACT_APP_API_URL });\n\nexport const tryLogin = async (credentials, onSuccess, onFailure = noop) => {\n    try {\n        const response = await instance.get(\"/auth\", credentials);\n        const token = response.data.token;\n        onSuccess(token);\n    } catch (e) {\n        console.log(e);\n        onFailure();\n    }\n};\n\nexport const getItems = async (onSuccess, token, onFailure = noop) => {\n    try {\n        const config = { headers: { \"X-Token\": token } };\n        const response = await instance.get(\"/items\", config);\n        onSuccess(response.data);\n    } catch (e) {\n        console.log(e);\n        onFailure();\n    }\n};\n\nexport const deleteItem = async (onSuccess, token, id, onFailure = noop) => {\n    try {\n        const config = { headers: { \"X-Token\": token } };\n        const response = await instance.delete(`/items/${id}`, config);\n        onSuccess(response.data);\n    } catch (e) {\n        console.log(e);\n        onFailure();\n    }\n};\n\nexport const addItem = async (onSuccess, token, newItem, onFailure = noop) => {\n    try {\n        const config = { headers: { \"X-Token\": token } };\n        const response = await instance.post(\"/items\", newItem, config);\n        onSuccess(response.data);\n    } catch (e) {\n        console.log(e);\n        onFailure();\n    }\n};\n","export const ITEM_TYPE = {\n    FOOD: \"food\",\n    DRINK: \"drink\"\n};\n\nexport const ENTER_KEY_CODE = 13;","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as PropTypes from \"prop-types\";\n\nconst ItemValue = ({ className, children, label, unit }) => (\n    <div className={className}>\n        <Label>{label}</Label>\n        <span>{`${children} ${unit ? unit : \"\"}`}</span>\n    </div>\n);\n\nItemValue.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    label: PropTypes.string,\n    unit: PropTypes.string,\n};\n\nconst Label = styled.span`\n    font-weight: 600;\n`;\n\nexport default styled(ItemValue)`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ITEM_TYPE } from \"../../utils/enums\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ItemValue from \"./ItemValue\";\nimport * as PropTypes from \"prop-types\";\n\nconst Item = ({ type, name, id, removeItem, ...rest }) => {\n    const componentsMap = {\n        [ITEM_TYPE.FOOD]: FoodItem,\n        [ITEM_TYPE.DRINK]: DrinkItem,\n    };\n    const Component = componentsMap[type];\n    return (\n        <Card>\n            <Card.Img variant=\"top\" src={`https://picsum.photos/id/${id + 20}/400`} />\n            <Card.Body>\n                <Card.Title>{name}</Card.Title>\n                <Component {...rest} />\n                <Button variant=\"danger\" onClick={() => removeItem(id)}>\n                    Remove\n                </Button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nItem.propTypes = {\n    type: PropTypes.string,\n    name: PropTypes.string,\n    id: PropTypes.number,\n    removeItem: PropTypes.func,\n};\n\nconst FoodItem = ({ description, weight, price, quantity }) => (\n    <>\n        <Card.Text>{description}</Card.Text>\n        <ItemData>\n            <ItemValue label=\"Weight\" unit=\"kg\">\n                {weight}\n            </ItemValue>\n            <ItemValue label=\"Price\" unit=\"$\">\n                {price}\n            </ItemValue>\n            <ItemValue label=\"Quantity\">{quantity}</ItemValue>\n        </ItemData>\n    </>\n);\n\nFoodItem.propTypes = {\n    description: PropTypes.string,\n    weight: PropTypes.number,\n    price: PropTypes.number,\n    quantity: PropTypes.number,\n};\n\nconst DrinkItem = ({ volume, price, quantity }) => {\n    return (\n        <ItemData>\n            <ItemValue label=\"Volume\" unit=\"l\">\n                {volume}\n            </ItemValue>\n            <ItemValue label=\"Price\" unit=\"$\">\n                {price}\n            </ItemValue>\n            <ItemValue label=\"Quantity\">{quantity}</ItemValue>\n        </ItemData>\n    );\n};\n\nDrinkItem.propTypes = {\n    volume: PropTypes.number,\n    price: PropTypes.number,\n    quantity: PropTypes.number,\n};\n\nconst ItemData = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport default Item;\n","import React from \"react\";\nimport Item from \"./index\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\nimport * as PropTypes from \"prop-types\";\n\nconst List = ({ items, removeItem }) => {\n    return <CardColumns>{items && items.map(item => <Item key={item.id} {...item} removeItem={removeItem} />)}</CardColumns>;\n};\n\nList.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object),\n    removeItem: PropTypes.func,\n};\n\nexport default List;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport * as PropTypes from \"prop-types\";\n\nconst FormElement = ({ label, error, controlProps }) => (\n    <Form.Group as={Row}>\n        <Form.Label column sm=\"2\">\n            {label}\n        </Form.Label>\n        <Col sm=\"10\">\n            <Form.Control placeholder={label} isValid={String(controlProps.value).length && !error} {...controlProps} />\n        </Col>\n    </Form.Group>\n);\n\nFormElement.propTypes = {\n    label: PropTypes.string,\n    error: PropTypes.string,\n    controlProps: PropTypes.object,\n};\n\nexport default FormElement;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { ITEM_TYPE } from \"../../../utils/enums\";\nimport FormElement from \"../../FormElement\";\nimport * as PropTypes from \"prop-types\";\n\nconst NewItemForm = ({ name, type, setType, description, volumeWeight, price, quantity, errorsMap, handleChange }) => {\n    return (\n        <Form>\n            <FormElement label=\"Name\" error={errorsMap[\"name\"]} controlProps={{ value: name, onChange: handleChange(\"name\") }} />\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column sm=\"2\">\n                    Type\n                </Form.Label>\n                <Col sm=\"10\">\n                    <DropdownButton id=\"dropdown-basic-button\" title={type.toUpperCase()}>\n                        {Object.values(ITEM_TYPE).map((itemType, index) => (\n                            <Dropdown.Item key={index} onClick={() => setType(itemType)}>\n                                {itemType}\n                            </Dropdown.Item>\n                        ))}\n                    </DropdownButton>\n                </Col>\n            </Form.Group>\n            {type === ITEM_TYPE.FOOD && (\n                <FormElement\n                    label=\"Description\"\n                    error={errorsMap[\"description\"]}\n                    controlProps={{\n                        value: description,\n                        onChange: handleChange(\"description\"),\n                        as: \"textarea\",\n                    }}\n                />\n            )}\n            <FormElement\n                label={type === ITEM_TYPE.FOOD ? \"Weight [kg]\" : \"Volume [l]\"}\n                error={errorsMap[\"volumeWeight\"]}\n                controlProps={{ value: volumeWeight, onChange: handleChange(\"volumeWeight\") }}\n            />\n            <FormElement label=\"Price [$]\" error={errorsMap[\"price\"]} controlProps={{ value: price, onChange: handleChange(\"price\") }} />\n            <FormElement\n                label=\"Quantity\"\n                error={errorsMap[\"quantity\"]}\n                controlProps={{ value: quantity, onChange: handleChange(\"quantity\") }}\n            />\n        </Form>\n    );\n};\n\nNewItemForm.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    setType: PropTypes.func,\n    description: PropTypes.string,\n    volumeWeight: PropTypes.string,\n    price: PropTypes.string,\n    quantity: PropTypes.number,\n    errorsMap: PropTypes.object,\n    handleChange: PropTypes.func,\n};\n\nexport default NewItemForm;\n","import * as yup from \"yup\";\n\nconst newItemSchema = yup.object().shape({\n    name: yup.string().required(),\n    description: yup\n        .string()\n        .max(200, \"Description is too long\")\n        .notRequired(),\n    volumeWeight: yup\n        .number()\n        .positive()\n        .required(),\n    price: yup\n        .number()\n        .positive()\n        .required(),\n    quantity: yup\n        .number()\n        .positive()\n        .required(),\n});\n\nexport const validateForm = async (resultObject, onValidationSuccess, onValidationError) => {\n    try {\n        await newItemSchema.validate(resultObject, {\n            abortEarly: false,\n            isStrict: false,\n        });\n        onValidationSuccess();\n    } catch (err) {\n        onValidationError(err);\n    }\n};\n","import React, { useReducer, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { ITEM_TYPE } from \"../../../utils/enums\";\nimport NewItemForm from \"./NewItemForm\";\nimport { validateForm } from \"./newItemSchema\";\nimport * as PropTypes from \"prop-types\";\n\nconst initialState = {\n    name: \"\",\n    type: ITEM_TYPE.FOOD,\n    price: \"\",\n    quantity: 1,\n    volumeWeight: \"\",\n    description: \"\",\n    errorsMap: {},\n    isFormValid: false,\n};\n\nconst reducer = (state, action) => {\n    if (action.type === \"reset\") {\n        return initialState;\n    }\n\n    const result = { ...state };\n    result[action.type] = action.value;\n    return result;\n};\n\nconst NewItemModal = ({ closeModal, visible, addNewItem, itemsLength }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const { name, type, price, quantity, volumeWeight, description, errorsMap, isFormValid } = state;\n\n    useEffect(() => {\n        const resultObject = {\n            name,\n            ...(type === ITEM_TYPE.FOOD ? { description } : {}),\n            volumeWeight,\n            price,\n            quantity,\n        };\n        const onValidationSuccess = () => {\n            setErrorsMap({});\n            dispatch({ type: \"isFormValid\", value: true });\n        };\n\n        const setErrors = error => {\n            const errorsMap = {};\n            error.inner.forEach(err => (errorsMap[err.path] = err.message));\n            setErrorsMap(errorsMap);\n        };\n        validateForm(resultObject, onValidationSuccess, err => setErrors(err));\n    }, [name, type, price, quantity, volumeWeight, description]);\n\n    const submitNewItem = () => {\n        if (isFormValid) {\n            const newItem = {\n                id: itemsLength + 1,\n                name,\n                type,\n                ...(type === ITEM_TYPE.FOOD\n                    ? { description, weight: Number.parseFloat(volumeWeight) }\n                    : { volume: Number.parseFloat(volumeWeight) }),\n                price: Number.parseFloat(price),\n                quantity: Number.parseInt(quantity),\n            };\n            addNewItem(newItem);\n            closeAndClear();\n        }\n    };\n\n    const clearState = () => {\n        dispatch({ type: \"reset\" });\n    };\n\n    const closeAndClear = () => {\n        clearState();\n        closeModal();\n    };\n\n    const handleChange = name => event => {\n        dispatch({ type: name, value: event.target.value });\n    };\n\n    const setErrorsMap = errorsMap => {\n        dispatch({ type: \"errorsMap\", value: errorsMap });\n    };\n\n    const setType = type => {\n        dispatch({ type: \"type\", value: type });\n    };\n\n    const formProps = {\n        name,\n        type,\n        setType,\n        description,\n        volumeWeight,\n        price,\n        quantity,\n        errorsMap,\n        handleChange,\n    };\n\n    return (\n        <Modal show={visible} onHide={closeAndClear} size=\"lg\">\n            <Modal.Header closeButton>\n                <Modal.Title>Add new item</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <NewItemForm {...formProps} />\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={closeAndClear}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" disabled={!isFormValid} onClick={submitNewItem}>\n                    Add\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default NewItemModal;\n\nNewItemModal.propTypes = {\n    closeModal: PropTypes.func,\n    visible: PropTypes.bool,\n    addNewItem: PropTypes.func,\n    itemsLength: PropTypes.number,\n};\n","import { useCookies } from \"react-cookie\";\n\nexport const useAuthToken = () => {\n    const [cookies] = useCookies([\"authToken\"]);\n    return cookies.authToken;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { addItem, deleteItem, getItems } from \"../services\";\nimport List from \"../components/item/list\";\nimport styled from \"styled-components\";\nimport NewItemModal from \"../components/item/form/NewItemModal\";\nimport Button from \"react-bootstrap/Button\";\nimport { useAuthToken } from \"../login/useAuthToken\";\nimport * as PropTypes from \"prop-types\";\n\nconst MainPage = ({ className }) => {\n    const [items, setItems] = useState([]);\n    const [modalVisible, setModalVisibility] = useState(false);\n    const authToken = useAuthToken();\n\n    useEffect(() => {\n        getItems(setItems, authToken);\n    }, [authToken]);\n\n    const removeItem = id => {\n        // due to mocked api, there are 5 mocked items\n        if (id < 6) {\n            deleteItem(onDeleteSuccess(id), authToken, id);\n        } else {\n            onDeleteSuccess(id)();\n        }\n    };\n\n    const addNewItem = newItem => {\n        addItem(onAddSuccess(newItem), authToken, newItem);\n    };\n\n    const onDeleteSuccess = id => () => {\n        const newArr = items.filter(item => item.id !== id);\n        setItems(newArr);\n    };\n\n    const onAddSuccess = newItem => () => {\n        const newArr = [...items, newItem];\n        setItems(newArr);\n    };\n\n    const openModal = () => setModalVisibility(true);\n    const closeModal = () => setModalVisibility(false);\n\n    return (\n        <div className={className}>\n            <Button onClick={openModal}>Add new item</Button>\n            <List items={items} removeItem={removeItem} />\n            <NewItemModal visible={modalVisible} closeModal={closeModal} addNewItem={addNewItem} itemsLength={items.length} />\n        </div>\n    );\n};\n\nMainPage.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default styled(MainPage)`\n    padding: 10px 10%;\n`;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { tryLogin } from \"../services\";\nimport { useCookies } from \"react-cookie\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { ENTER_KEY_CODE } from \"../utils/enums\";\nimport * as PropTypes from \"prop-types\";\n\nconst LoginPage = ({ className }) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [, setCookie] = useCookies([\"authToken\"]);\n    const history = useHistory();\n\n    const onLoginSuccess = useCallback(\n        token => {\n            setCookie(\"authToken\", token, { path: \"/\" });\n            history.push(\"/\");\n        },\n        [history, setCookie]\n    );\n\n    const handleUserKeyPress = useCallback(\n        event => {\n            const { keyCode } = event;\n            if (keyCode === ENTER_KEY_CODE) {\n                tryLogin({ username: login, password }, onLoginSuccess, () => null);\n            }\n        },\n        [login, onLoginSuccess, password]\n    );\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleUserKeyPress);\n\n        return () => {\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\n        };\n    }, [handleUserKeyPress]);\n\n    const handleChange = setter => event => {\n        setter(event.target.value);\n    };\n\n    const onLoginClick = () => {\n        tryLogin({ username: login, password }, onLoginSuccess, () => null);\n    };\n\n    return (\n        <Form className={className}>\n            <Form.Group as={Row}>\n                <Form.Label column sm=\"2\">\n                    Email\n                </Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control type=\"email\" placeholder=\"email\" value={login} onChange={handleChange(setLogin)} />\n                </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column sm=\"2\">\n                    Password\n                </Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={handleChange(setPassword)} />\n                </Col>\n            </Form.Group>\n            <LoginButton variant=\"primary\" onClick={onLoginClick}>\n                login\n            </LoginButton>\n        </Form>\n    );\n};\n\nLoginPage.propTypes = {\n    className: PropTypes.string\n};\n\nconst LoginButton = styled(Button)`\n    width: 50%;\n    align-self: center;\n`;\n\nexport default styled(LoginPage)`\n    position: absolute;\n    padding: 15px;\n    border: 1px solid #a6a6a6;\n    top: 30%;\n    left: calc(50% - 15vw);\n    display: flex;\n    flex-direction: column;\n    width: 30vw;\n\n    @media (max-width: 1500px) {\n        width: 60vw;\n        left: calc(50% - 30vw);\n    }\n\n    @media (max-width: 750px) {\n        width: 80vw;\n        left: calc(50% - 40vw);\n    }\n`;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuthToken } from \"../../login/useAuthToken\";\nimport * as PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const authToken = useAuthToken();\n    return <Route {...rest} render={props => (authToken ? <Component {...props} /> : <Redirect to=\"/login\" />)} />;\n};\n\nPrivateRoute.propTypes = {\n    component: PropTypes.elementType,\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport * as PropTypes from \"prop-types\";\n\nconst Layout = ({ className, children }) => {\n    const history = useHistory();\n    const [, , removeCookie] = useCookies([\"authToken\"]);\n\n    const logout = () => {\n        const options = {\n            path: \"/\",\n        };\n        removeCookie(\"authToken\", options);\n        history.push(\"/login\");\n    };\n\n    return (\n        <>\n            <div className={className}>\n                <CenterNavLink to=\"/\">Home</CenterNavLink>\n                <AppTitle>Web App</AppTitle>\n                <Button onClick={logout} variant=\"secondary\" size=\"sm\">\n                    Log out\n                </Button>\n            </div>\n            {children}\n        </>\n    );\n};\n\nLayout.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nconst CenterNavLink = styled(NavLink)`\n    color: white;\n    align-self: center;\n\n    :hover {\n        color: coral;\n    }\n`;\n\nconst AppTitle = styled.h1`\n    color: white;\n`;\n\nconst StyledLayout = styled(Layout)`\n    display: flex;\n    justify-content: space-between;\n    background-color: #1e88e5;\n    padding: 10px;\n`;\n\nexport const withLayout = Component => () => (\n    <StyledLayout>\n        <Component />\n    </StyledLayout>\n);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport MainPage from \"./main-page/MainPage\";\nimport LoginPage from \"./login/LoginPage\";\nimport { CookiesProvider } from \"react-cookie\";\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\nimport { withLayout } from \"./components/Layout\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => (\n    <CookiesProvider>\n        <Router>\n            <Switch>\n                <Route path=\"/login\" exact component={LoginPage} />\n                <PrivateRoute exact path=\"/\" component={withLayout(MainPage)} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </Router>\n    </CookiesProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}