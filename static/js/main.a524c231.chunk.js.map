{"version":3,"sources":["utils/index.js","services/index.js","utils/enums.js","components/item/ItemValue.jsx","components/item/index.jsx","components/item/list.jsx","components/FormElement.jsx","components/item/form/NewItemForm.jsx","components/item/form/newItemSchema.js","components/item/form/NewItemModal.jsx","login/useAuthToken.js","main-page/MainPage.jsx","login/LoginPage.jsx","components/auth/PrivateRoute.jsx","components/Layout.jsx","App.jsx","serviceWorker.js","index.js"],"names":["noop","instance","axios","create","baseURL","process","tryLogin","credentials","onSuccess","a","onFailure","get","response","token","data","console","log","getItems","config","headers","deleteItem","id","delete","addItem","newItem","post","ITEM_TYPE","FOOD","DRINK","Label","styled","span","className","children","label","unit","FoodItem","description","weight","price","quantity","Card","Text","ItemData","DrinkItem","volume","div","Item","type","name","removeItem","rest","Component","Img","variant","src","Body","Title","Button","onClick","List","items","CardColumns","map","item","key","FormElement","error","controlProps","Form","Group","as","Row","column","sm","Col","Control","placeholder","isValid","String","value","length","NewItemForm","setType","volumeWeight","errorsMap","handleChange","onChange","controlId","DropdownButton","title","toUpperCase","Object","values","itemType","index","Dropdown","newItemSchema","yup","shape","required","ensure","min","max","notRequired","positive","validateForm","resultObject","onValidationSuccess","onValidationError","validate","abortEarly","isStrict","initialState","isFormValid","reducer","state","action","result","NewItemModal","closeModal","visible","addNewItem","lastAddedIndex","useReducer","dispatch","useEffect","setErrorsMap","err","inner","forEach","path","message","setErrors","closeAndClear","formProps","event","target","Modal","show","onHide","size","Header","closeButton","Footer","disabled","Number","parseFloat","parseInt","useAuthToken","useCookies","authToken","useState","setItems","setLastAddedIndex","modalVisible","setModalVisibility","onDeleteSuccess","newArr","filter","onAddSuccess","LoginButton","login","setLogin","password","setPassword","setCookie","history","useHistory","onLoginSuccess","useCallback","push","handleUserKeyPress","keyCode","username","window","addEventListener","removeEventListener","setter","PrivateRoute","component","render","props","to","CenterNavLink","NavLink","AppTitle","h1","StyledLayout","removeCookie","App","CookiesProvider","exact","LoginPage","MainPage","from","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a524c231.chunk.js","sourcesContent":["export const noop = () => null;\r\n","import axios from \"axios\";\r\nimport { noop } from \"../utils\";\r\n\r\nconst instance = axios.create({ baseURL: process.env.REACT_APP_API_URL });\r\n\r\nexport const tryLogin = async (credentials, onSuccess, onFailure = noop) => {\r\n    try {\r\n        const response = await instance.get(\"/auth\", credentials);\r\n        const token = response.data.token;\r\n        onSuccess(token);\r\n    } catch (e) {\r\n        console.log(e);\r\n        onFailure();\r\n    }\r\n};\r\n\r\nexport const getItems = async (onSuccess, token, onFailure = noop) => {\r\n    try {\r\n        const config = { headers: { \"X-Token\": token } };\r\n        const response = await instance.get(\"/items\", config);\r\n        onSuccess(response.data);\r\n    } catch (e) {\r\n        console.log(e);\r\n        onFailure();\r\n    }\r\n};\r\n\r\nexport const deleteItem = async (onSuccess, token, id, onFailure = noop) => {\r\n    try {\r\n        const config = { headers: { \"X-Token\": token } };\r\n        const response = await instance.delete(`/items/${id}`, config);\r\n        onSuccess(response.data);\r\n    } catch (e) {\r\n        console.log(e);\r\n        onFailure();\r\n    }\r\n};\r\n\r\nexport const addItem = async (onSuccess, token, newItem, onFailure = noop) => {\r\n    try {\r\n        const config = { headers: { \"X-Token\": token } };\r\n        const response = await instance.post(\"/items\", newItem, config);\r\n        onSuccess(response.data);\r\n    } catch (e) {\r\n        console.log(e);\r\n        onFailure();\r\n    }\r\n};\r\n","export const ITEM_TYPE = {\r\n    FOOD: \"food\",\r\n    DRINK: \"drink\"\r\n};\r\n\r\nexport const ENTER_KEY_CODE = 13;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst ItemValue = ({ className, children, label, unit }) => (\r\n    <div className={className}>\r\n        <Label>{label}</Label>\r\n        <span>{`${children} ${unit ? unit : \"\"}`}</span>\r\n    </div>\r\n);\r\n\r\nItemValue.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n    label: PropTypes.string,\r\n    unit: PropTypes.string,\r\n};\r\n\r\nconst Label = styled.span`\r\n    font-weight: 600;\r\n`;\r\n\r\nexport default styled(ItemValue)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 5px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ITEM_TYPE } from \"../../utils/enums\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ItemValue from \"./ItemValue\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst Item = ({ type, name, id, removeItem, ...rest }) => {\r\n    const componentsMap = {\r\n        [ITEM_TYPE.FOOD]: FoodItem,\r\n        [ITEM_TYPE.DRINK]: DrinkItem,\r\n    };\r\n    const Component = componentsMap[type];\r\n    return (\r\n        <Card>\r\n            <Card.Img variant=\"top\" src={`https://picsum.photos/id/${id + 20}/400`} />\r\n            <Card.Body>\r\n                <Card.Title>{name}</Card.Title>\r\n                <Component {...rest} />\r\n                <Button variant=\"danger\" onClick={() => removeItem(id)}>\r\n                    Remove\r\n                </Button>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nItem.propTypes = {\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n    id: PropTypes.number,\r\n    removeItem: PropTypes.func,\r\n};\r\n\r\nconst FoodItem = ({ description, weight, price, quantity }) => (\r\n    <>\r\n        <Card.Text>{description}</Card.Text>\r\n        <ItemData>\r\n            <ItemValue label=\"Weight\" unit=\"kg\">\r\n                {weight}\r\n            </ItemValue>\r\n            <ItemValue label=\"Price\" unit=\"$\">\r\n                {price}\r\n            </ItemValue>\r\n            <ItemValue label=\"Quantity\">{quantity}</ItemValue>\r\n        </ItemData>\r\n    </>\r\n);\r\n\r\nFoodItem.propTypes = {\r\n    description: PropTypes.string,\r\n    weight: PropTypes.number,\r\n    price: PropTypes.number,\r\n    quantity: PropTypes.number,\r\n};\r\n\r\nconst DrinkItem = ({ volume, price, quantity }) => {\r\n    return (\r\n        <ItemData>\r\n            <ItemValue label=\"Volume\" unit=\"l\">\r\n                {volume}\r\n            </ItemValue>\r\n            <ItemValue label=\"Price\" unit=\"$\">\r\n                {price}\r\n            </ItemValue>\r\n            <ItemValue label=\"Quantity\">{quantity}</ItemValue>\r\n        </ItemData>\r\n    );\r\n};\r\n\r\nDrinkItem.propTypes = {\r\n    volume: PropTypes.number,\r\n    price: PropTypes.number,\r\n    quantity: PropTypes.number,\r\n};\r\n\r\nconst ItemData = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport Item from \"./index\";\r\nimport CardColumns from \"react-bootstrap/CardColumns\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst List = ({ items, removeItem }) => {\r\n    return <CardColumns>{items && items.map(item => <Item key={item.id} {...item} removeItem={removeItem} />)}</CardColumns>;\r\n};\r\n\r\nList.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.object),\r\n    removeItem: PropTypes.func,\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst FormElement = ({ label, error, controlProps }) => (\r\n    <Form.Group as={Row}>\r\n        <Form.Label column sm=\"2\">\r\n            {label}\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n            <Form.Control placeholder={label} isValid={String(controlProps.value).length && !error} {...controlProps} />\r\n        </Col>\r\n    </Form.Group>\r\n);\r\n\r\nFormElement.propTypes = {\r\n    label: PropTypes.string,\r\n    error: PropTypes.string,\r\n    controlProps: PropTypes.object,\r\n};\r\n\r\nexport default FormElement;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { ITEM_TYPE } from \"../../../utils/enums\";\r\nimport FormElement from \"../../FormElement\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst NewItemForm = ({ name, type, setType, description, volumeWeight, price, quantity, errorsMap, handleChange }) => {\r\n    return (\r\n        <Form>\r\n            <FormElement label=\"Name\" error={errorsMap[\"name\"]} controlProps={{ value: name, onChange: handleChange(\"name\") }} />\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                <Form.Label column sm=\"2\">\r\n                    Type\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                    <DropdownButton id=\"dropdown-basic-button\" title={type.toUpperCase()}>\r\n                        {Object.values(ITEM_TYPE).map((itemType, index) => (\r\n                            <Dropdown.Item key={index} onClick={() => setType(itemType)}>\r\n                                {itemType}\r\n                            </Dropdown.Item>\r\n                        ))}\r\n                    </DropdownButton>\r\n                </Col>\r\n            </Form.Group>\r\n            {type === ITEM_TYPE.FOOD && (\r\n                <FormElement\r\n                    label=\"Description\"\r\n                    error={errorsMap[\"description\"]}\r\n                    controlProps={{\r\n                        value: description,\r\n                        onChange: handleChange(\"description\"),\r\n                        as: \"textarea\",\r\n                    }}\r\n                />\r\n            )}\r\n            <FormElement\r\n                label={type === ITEM_TYPE.FOOD ? \"Weight [kg]\" : \"Volume [l]\"}\r\n                error={errorsMap[\"volumeWeight\"]}\r\n                controlProps={{ value: volumeWeight, onChange: handleChange(\"volumeWeight\") }}\r\n            />\r\n            <FormElement label=\"Price [$]\" error={errorsMap[\"price\"]} controlProps={{ value: price, onChange: handleChange(\"price\") }} />\r\n            <FormElement\r\n                label=\"Quantity\"\r\n                error={errorsMap[\"quantity\"]}\r\n                controlProps={{ value: quantity, onChange: handleChange(\"quantity\") }}\r\n            />\r\n        </Form>\r\n    );\r\n};\r\n\r\nNewItemForm.propTypes = {\r\n    name: PropTypes.string,\r\n    type: PropTypes.string,\r\n    setType: PropTypes.func,\r\n    description: PropTypes.string,\r\n    volumeWeight: PropTypes.string,\r\n    price: PropTypes.string,\r\n    quantity: PropTypes.number,\r\n    errorsMap: PropTypes.object,\r\n    handleChange: PropTypes.func,\r\n};\r\n\r\nexport default NewItemForm;\r\n","import * as yup from \"yup\";\r\n\r\nconst newItemSchema = yup.object().shape({\r\n    name: yup\r\n        .string()\r\n        .required()\r\n        .ensure()\r\n        .min(1),\r\n    description: yup\r\n        .string()\r\n        .max(200, \"Description is too long\")\r\n        .notRequired(),\r\n    volumeWeight: yup\r\n        .number()\r\n        .positive()\r\n        .required(),\r\n    price: yup\r\n        .number()\r\n        .positive()\r\n        .required(),\r\n    quantity: yup\r\n        .number()\r\n        .positive()\r\n        .required(),\r\n});\r\n\r\nexport const validateForm = async (resultObject, onValidationSuccess, onValidationError) => {\r\n    try {\r\n        await newItemSchema.validate(resultObject, {\r\n            abortEarly: false,\r\n            isStrict: false,\r\n        });\r\n        onValidationSuccess();\r\n    } catch (err) {\r\n        onValidationError(err);\r\n    }\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { ITEM_TYPE } from \"../../../utils/enums\";\r\nimport NewItemForm from \"./NewItemForm\";\r\nimport { validateForm } from \"./newItemSchema\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst initialState = {\r\n    name: \"\",\r\n    type: ITEM_TYPE.FOOD,\r\n    price: \"\",\r\n    quantity: 1,\r\n    volumeWeight: \"\",\r\n    description: \"\",\r\n    errorsMap: {},\r\n    isFormValid: false,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === \"reset\") {\r\n        return initialState;\r\n    }\r\n\r\n    const result = { ...state };\r\n    result[action.type] = action.value;\r\n    return result;\r\n};\r\n\r\nconst NewItemModal = ({ closeModal, visible, addNewItem, lastAddedIndex }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const { name, type, price, quantity, volumeWeight, description, errorsMap, isFormValid } = state;\r\n\r\n    useEffect(() => {\r\n        const resultObject = {\r\n            name,\r\n            ...(type === ITEM_TYPE.FOOD ? { description } : {}),\r\n            volumeWeight,\r\n            price,\r\n            quantity,\r\n        };\r\n        const onValidationSuccess = () => {\r\n            setErrorsMap({});\r\n            dispatch({ type: \"isFormValid\", value: true });\r\n        };\r\n\r\n        const setErrors = error => {\r\n            const errorsMap = {};\r\n            error.inner.forEach(err => (errorsMap[err.path] = err.message));\r\n            setErrorsMap(errorsMap);\r\n            dispatch({ type: \"isFormValid\", value: false });\r\n        };\r\n        validateForm(resultObject, onValidationSuccess, err => setErrors(err));\r\n    }, [name, type, price, quantity, volumeWeight, description]);\r\n\r\n    const submitNewItem = () => {\r\n        if (isFormValid) {\r\n            const newItem = {\r\n                id: lastAddedIndex + 1,\r\n                name,\r\n                type,\r\n                ...(type === ITEM_TYPE.FOOD\r\n                    ? { description, weight: Number.parseFloat(volumeWeight) }\r\n                    : { volume: Number.parseFloat(volumeWeight) }),\r\n                price: Number.parseFloat(price),\r\n                quantity: Number.parseInt(quantity),\r\n            };\r\n            addNewItem(newItem);\r\n            closeAndClear();\r\n        }\r\n    };\r\n\r\n    const clearState = () => {\r\n        dispatch({ type: \"reset\" });\r\n    };\r\n\r\n    const closeAndClear = () => {\r\n        clearState();\r\n        closeModal();\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        dispatch({ type: name, value: event.target.value });\r\n    };\r\n\r\n    const setErrorsMap = errorsMap => {\r\n        dispatch({ type: \"errorsMap\", value: errorsMap });\r\n    };\r\n\r\n    const setType = type => {\r\n        dispatch({ type: \"type\", value: type });\r\n    };\r\n\r\n    const formProps = {\r\n        name,\r\n        type,\r\n        setType,\r\n        description,\r\n        volumeWeight,\r\n        price,\r\n        quantity,\r\n        errorsMap,\r\n        handleChange,\r\n    };\r\n\r\n    return (\r\n        <Modal show={visible} onHide={closeAndClear} size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add new item</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <NewItemForm {...formProps} />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={closeAndClear}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" disabled={!isFormValid} onClick={submitNewItem}>\r\n                    Add\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default NewItemModal;\r\n\r\nNewItemModal.propTypes = {\r\n    closeModal: PropTypes.func,\r\n    visible: PropTypes.bool,\r\n    addNewItem: PropTypes.func,\r\n    lastAddedIndex: PropTypes.number\r\n};\r\n","import { useCookies } from \"react-cookie\";\r\n\r\nexport const useAuthToken = () => {\r\n    const [cookies] = useCookies([\"authToken\"]);\r\n    return cookies.authToken;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addItem, deleteItem, getItems } from \"../services\";\r\nimport List from \"../components/item/list\";\r\nimport styled from \"styled-components\";\r\nimport NewItemModal from \"../components/item/form/NewItemModal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useAuthToken } from \"../login/useAuthToken\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst MainPage = ({ className }) => {\r\n    const [items, setItems] = useState([]);\r\n    const [lastAddedIndex, setLastAddedIndex] = useState(6);\r\n    const [modalVisible, setModalVisibility] = useState(false);\r\n    const authToken = useAuthToken();\r\n\r\n    useEffect(() => {\r\n        getItems(setItems, authToken);\r\n    }, [authToken]);\r\n\r\n    const removeItem = id => {\r\n        // due to mocked api, there are 5 mocked items\r\n        if (id < 6) {\r\n            deleteItem(onDeleteSuccess(id), authToken, id);\r\n        } else {\r\n            onDeleteSuccess(id)();\r\n        }\r\n    };\r\n\r\n    const addNewItem = newItem => {\r\n        addItem(onAddSuccess(newItem), authToken, newItem);\r\n    };\r\n\r\n    const onDeleteSuccess = id => () => {\r\n        const newArr = items.filter(item => item.id !== id);\r\n        setItems(newArr);\r\n    };\r\n\r\n    const onAddSuccess = newItem => () => {\r\n        const newArr = [...items, newItem];\r\n        setLastAddedIndex(newItem.id);\r\n        setItems(newArr);\r\n    };\r\n\r\n    const openModal = () => setModalVisibility(true);\r\n    const closeModal = () => setModalVisibility(false);\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Button onClick={openModal}>Add new item</Button>\r\n            <List items={items} removeItem={removeItem} />\r\n            <NewItemModal visible={modalVisible} closeModal={closeModal} addNewItem={addNewItem} lastAddedIndex={lastAddedIndex} />\r\n        </div>\r\n    );\r\n};\r\n\r\nMainPage.propTypes = {\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default styled(MainPage)`\r\n    padding: 10px 10%;\r\n`;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { tryLogin } from \"../services\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { ENTER_KEY_CODE } from \"../utils/enums\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst LoginPage = ({ className }) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [, setCookie] = useCookies([\"authToken\"]);\r\n    const history = useHistory();\r\n\r\n    const onLoginSuccess = useCallback(\r\n        token => {\r\n            setCookie(\"authToken\", token, { path: \"/\" });\r\n            history.push(\"/\");\r\n        },\r\n        [history, setCookie]\r\n    );\r\n\r\n    const handleUserKeyPress = useCallback(\r\n        event => {\r\n            const { keyCode } = event;\r\n            if (keyCode === ENTER_KEY_CODE) {\r\n                tryLogin({ username: login, password }, onLoginSuccess, () => null);\r\n            }\r\n        },\r\n        [login, onLoginSuccess, password]\r\n    );\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", handleUserKeyPress);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleUserKeyPress);\r\n        };\r\n    }, [handleUserKeyPress]);\r\n\r\n    const handleChange = setter => event => {\r\n        setter(event.target.value);\r\n    };\r\n\r\n    const onLoginClick = () => {\r\n        tryLogin({ username: login, password }, onLoginSuccess, () => null);\r\n    };\r\n\r\n    return (\r\n        <Form className={className}>\r\n            <Form.Group as={Row}>\r\n                <Form.Label column sm=\"2\">\r\n                    Email\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                    <Form.Control type=\"email\" placeholder=\"email\" value={login} onChange={handleChange(setLogin)} />\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                <Form.Label column sm=\"2\">\r\n                    Password\r\n                </Form.Label>\r\n                <Col sm=\"10\">\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={handleChange(setPassword)} />\r\n                </Col>\r\n            </Form.Group>\r\n            <LoginButton variant=\"primary\" onClick={onLoginClick}>\r\n                login\r\n            </LoginButton>\r\n        </Form>\r\n    );\r\n};\r\n\r\nLoginPage.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nconst LoginButton = styled(Button)`\r\n    width: 50%;\r\n    align-self: center;\r\n`;\r\n\r\nexport default styled(LoginPage)`\r\n    position: absolute;\r\n    padding: 15px;\r\n    border: 1px solid #a6a6a6;\r\n    top: 30%;\r\n    left: calc(50% - 15vw);\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 30vw;\r\n\r\n    @media (max-width: 1500px) {\r\n        width: 60vw;\r\n        left: calc(50% - 30vw);\r\n    }\r\n\r\n    @media (max-width: 750px) {\r\n        width: 80vw;\r\n        left: calc(50% - 40vw);\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuthToken } from \"../../login/useAuthToken\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const authToken = useAuthToken();\r\n    return <Route {...rest} render={props => (authToken ? <Component {...props} /> : <Redirect to=\"/login\" />)} />;\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    component: PropTypes.elementType,\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nconst Layout = ({ className, children }) => {\r\n    const history = useHistory();\r\n    const [, , removeCookie] = useCookies([\"authToken\"]);\r\n\r\n    const logout = () => {\r\n        const options = {\r\n            path: \"/\",\r\n        };\r\n        removeCookie(\"authToken\", options);\r\n        history.push(\"/login\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={className}>\r\n                <CenterNavLink to=\"/\">Home</CenterNavLink>\r\n                <AppTitle>Web App</AppTitle>\r\n                <Button onClick={logout} variant=\"secondary\" size=\"sm\">\r\n                    Log out\r\n                </Button>\r\n            </div>\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nLayout.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n};\r\n\r\nconst CenterNavLink = styled(NavLink)`\r\n    color: white;\r\n    align-self: center;\r\n\r\n    :hover {\r\n        color: coral;\r\n    }\r\n`;\r\n\r\nconst AppTitle = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nconst StyledLayout = styled(Layout)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: #1e88e5;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const withLayout = Component => () => (\r\n    <StyledLayout>\r\n        <Component />\r\n    </StyledLayout>\r\n);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport MainPage from \"./main-page/MainPage\";\r\nimport LoginPage from \"./login/LoginPage\";\r\nimport { CookiesProvider } from \"react-cookie\";\r\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\r\nimport { withLayout } from \"./components/Layout\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst App = () => (\r\n    <CookiesProvider>\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/login\" exact component={LoginPage} />\r\n                <PrivateRoute exact path=\"/\" component={withLayout(MainPage)} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </Router>\r\n    </CookiesProvider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}